* 1.x

** 1.2.4 

This release contains bug fixes and adds a few minor features to
the GenericForms components, namely:

  - the formState object in a ManagedForm now exposes a setState()
    method that allows you to set custom form state 
  - the formState object is now also passed to the onSuccess callback
    of a ManagedForm, to allow stateful UI updates that reflect successful
    form submission and the submitted form data
  - the Checkbox component now wraps the underlying input element and label
    in a .form-check class

** 1.2.3
   
This release contains major new (but mostly backwards-compatible) features:

  - GenericForms: a new set of components for building forms, which
    focuses on keeping things simple by using uncontrolled form
    components and letting the browser handle most form validation.
    The old form components (Button, Checkbox, TextInput, Select) have
    been generalized and moved from GenericDisplay into GenericForms.
    The top-level validation.js has also been moved into GenericForms.
    SynsetSearchForm has been reworked to use the new components from
    GenericForms and no longer emits a Redux action on every change of
    input.
  - DataContainers gained support for sorting functions. The DataTable
    component now has basic support for sorting in ascending and
    descending order on a per-column basis.
  - DataContainers also gained support for optionally rendering a
    separate component when data is unavailable.
    
Other, more minor changes include:

  - Graphs can now be forced to re-draw by setting their forceRedraw
    prop from a parent component.
  - It is now possible to set a prefix for the API endpoints via
    window.GERMANET_API_PREFIX or window.APP_CONTEXT_PATH.
  - A number of internal changes fixed bugs and made it easier to
    extend the components for individual data types with new props.

** 1.2.2 
   
This is a minor release that fixes a few bugs and adds a few
backwards-compatible features.  The important changes are:

  - the selector function for data container state,
    selectContainerState, is now defined in DataContainer/selectors.js
    and can be imported by consuming applications
  - there is also a new selector function there, selectChosenIdIn, to
    select the ID of the chosen item in a data container
  - there is a new isComponent helper to test whether a value can be
    used as a React component
  - the error action type defined by makeQueryActions has been renamed
    to <prefix>_QUERY_ERROR
  - the margin around svg elements for graphs has been removed 

** 1.2.1 

This is a minor release that adds a useful feature to the graphs:
double-click to reset the graph state and restore automatic zooming.

** 1.2.0 

The main changes in 1.2.0 involve the SynsetSearch components, which
have been extensively reworked to make them more flexible and easier
to style.  Some of these changes are *not backwards compatible*; thus
the minor version number bump.

  - SynsetSearchBox has been renamed to SynsetSearchForm and no longer
    wraps the contained form in a Card.  Renaming this component also
    meant renaming a variety of reducers, selectors, etc. The main
    thing to know is that the reducer which consuming libraries must
    install at the top level is now called *synsetSearches* (instead
    of 'synsetSearchBoxes').
  - SynsetSearchHistoryBox has been renamed to SynsetSearchHistoryNav
    and no longer wraps the contained nav element in a Card. This
    component has also changed to a class component and will
    automatically reload history from browser storage when the persist
    prop is true.
  - There is a new SynsetSearchAlert component that allows displaying
    an alert (anywhere on the page) when a search fails to return
    results.
    
The other major change is in APIWrapper.  API-wrapped components
(e.g., all the built-in data containers) will now:

   - not throw an error at mount time if there is not yet enough
     information to make an API request
   - make a new request whenever their props change

The latter change implements behavior which was expected all along,
and should be considered a bugfix, even though it technically
introduces new behavior; see commit a963c0c for an explanation.

There were also a few more minor changes:

  - WiktDefsAsList now renders more like ILIRecordsAsList
  - props that affect styling and appearance became better exposed in
    a few places
  - various bugs were fixed

** 1.1.0

The data format returned by the backend API has changed; hence the jump of
the minor version number.  In addition to accommodating and
documenting these API changes, the major changes in this version are:

   - There is support for tracking search history in the SynsetSearch
     components, including a new SynsetSearchHistoryBox component that
     displays a row of buttons to re-perform previous searches.  These
     searches will be performed with the same parameters (i.e.,
     ignoreCase will be correctly set).
   - The FIELD_MAP and ALL_FIELDS constants for each data type are
     exported so consuming applications can use them.
   - Props related to CSS are better exposed.  Containers for
     individual data types will pass on classNames, extras, etc. to
     the underlying DataTable and DataList components.  This allows
     styling these containers more easily in a consuming application.
   - Various smaller changes in GenericDisplay components, including:
     + a new EmptyTable component, which displays an
       empty data table with column headers and a message for the user
     + the generic Button component also now supports rendering
       disabled buttons.
     + DataTableRow and ListItem gained onClick props

** 1.0.2

   - rearrange package structure.  The package no longer has separate
     src/ and dist/ trees, and no longer transpiles and builds a
     single bundle. Instead, JSX files are transpiled in-place to
     ES2015, and consuming applications are expected to further
     transpile and bundle any code that they import from this library
     as necessary. See the top-level README for motivations for this
     change.
   - Synsets: rewrite SynsetsAsTableRow to use DataTableRow under the
     hood, for consistency and better CSS support

